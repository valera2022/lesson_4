.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.selected{
  color: aliceblue;
  float: left;
  height: 30px;
  width: 60px;
  border-radius: 1px;
  background-color: #282c34;
  flex-direction: column;
  margin-right: 1px;
  padding-left: 10px;
 
  box-shadow: 1px 1px 10px red;
}
.non-selected{
 
  color: aliceblue;
  float: left;
  height: 30px;
  width: 60px;
  border-radius: 1px;
  background-color: #282c34;
  flex-direction: column;
  margin-right: 1px;
  padding-left: 10px;
  
}

.add{
  color: aliceblue;
  float: left;
  height: 30px;
  width: 60px;
  border-radius: 1px;
  background-color: green;
  flex-direction: column;
  margin-right: 1px;
  padding-left: 10px;

}

.main-container {
  overflow: auto ;
 
  display: flex;
  position: relative;

  margin-left: 350px;
  margin-top: 20px;

  /* flex: auto; */
  /* flex-direction: row ; */
  border: solid;
  width: 600px;
  height: 300px;
  border-color: grey ;
  border-radius: 10px;

 

}

::backdrop {
  background-image: linear-gradient(
    45deg,
    magenta,
    rebeccapurple,
    dodgerblue,
    green
  );
  opacity: 0.75;
}

/* Open state of the dialog  */
dialog:open {
  opacity: 1;
  transform: scaleY(1);
}

/* Closed state of the dialog   */
dialog {
  height: 30%;
  width: 15%;
  background-color: rgb(74, 94, 185);
  opacity: 0;
  transform: scaleY(0);
  transition:
    opacity 0.7s ease-out,
    transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete,
    display 0.7s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/* Before open state  */
/* Needs to be after the previous dialog:open rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog:open {
    opacity: 0;
    transform: scaleY(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog:open::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog:open::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

.popUpform{
  /* background-color: bisque; */
}

.tasklist{
 /* max-height: 30px; */
 /* position: fixed; */
 
 

  margin-left: -200px;
  margin-top: 40px;
  justify-content: left;
  border:dotted;
  border-color: rgb(243, 196, 133);
  margin-bottom: -10px;
  overflow: auto;
 
  flex-direction: row
  


}
.button{
  position: absolute  ;
  left:300px;
  /* bottom: 400px; */
  background-color: red;
  border-radius: 10px;
  margin-top:10px
  
}

.category{

}

.item-task{
  height: 40px;
}

.task-holder{
   margin-right: 10px;
}

.new-task-button{
  border-radius: 10px;
  background-color: rgb(90, 242, 76);
}

.cancel-new-task{
  border-radius: 10px;
  background-color: red;
}